# Nginx configuration for HF DABBY load balancing
# This configuration provides load balancing for the FastAPI application

upstream fastapi_backend {
    # Load balancing method - can be ip_hash, least_conn, or default round-robin
    least_conn;
    
    # FastAPI instances (adjust based on your deployment)
    server 127.0.0.1:8000 weight=3 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:8001 weight=2 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:8002 weight=2 max_fails=3 fail_timeout=30s;
    
    # Health check (requires nginx-plus or lua module)
    # health_check;
    
    # Keepalive connections
    keepalive 32;
}

upstream gradio_backend {
    # Gradio interface instances
    server 127.0.0.1:7860 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:7861 weight=1 max_fails=3 fail_timeout=30s;
    
    keepalive 16;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=2r/s;

server {
    listen 80;
    server_name hf-dabby.local;  # Change to your domain
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logging
    access_log /var/log/nginx/hf_dabby_access.log;
    error_log /var/log/nginx/hf_dabby_error.log;
    
    # Client settings
    client_max_body_size 100M;  # Allow large file uploads
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;
    
    # FastAPI endpoints
    location /api/ {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        # Proxy settings
        proxy_pass http://fastapi_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;  # Long timeout for file analysis
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # FastAPI docs and root
    location ~ ^/(docs|redoc|openapi.json|health)$ {
        proxy_pass http://fastapi_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # File upload endpoints with stricter rate limiting
    location ~ ^/api/(upload|analyze)$ {
        limit_req zone=upload_limit burst=5 nodelay;
        
        proxy_pass http://fastapi_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for file uploads
        proxy_connect_timeout 120s;
        proxy_send_timeout 300s;
        proxy_read_timeout 600s;
        
        # Large file handling
        client_max_body_size 500M;
        proxy_request_buffering off;
    }
    
    # Gradio interface
    location / {
        proxy_pass http://gradio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Gradio
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Static files (if any)
    location /static/ {
        root /var/www/hf-dabby;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/error-pages;
        internal;
    }
    
    location = /50x.html {
        root /var/www/error-pages;
        internal;
    }
}

# HTTPS configuration (if SSL certificates are available)
server {
    listen 443 ssl http2;
    server_name hf-dabby.local;  # Change to your domain
    
    # SSL certificates (update paths as needed)
    ssl_certificate /etc/ssl/certs/hf-dabby.crt;
    ssl_certificate_key /etc/ssl/private/hf-dabby.key;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Include the same location blocks as HTTP version
    include /etc/nginx/conf.d/hf-dabby-locations.conf;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name hf-dabby.local;  # Change to your domain
    return 301 https://$server_name$request_uri;
}
